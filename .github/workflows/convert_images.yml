name: Convert Images to WebP

on:
  push:
    paths:
      - 'images/inbox/**'
      - '.github/workflows/convert_images.yml'
    branches:
      - main
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "convert-images"
  cancel-in-progress: false

jobs:
  convert:
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Install ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick webp

      - name: Convert images to WebP
        run: |
          for img in images/inbox/*; do
            [ -f "$img" ] || continue
            if [ "$(basename "$img")" = ".gitkeep" ]; then continue; fi
            filename="$(basename "$img")"
            basename_no_ext="${filename%.*}"
            output="events_listing/assets/images/${basename_no_ext}.webp"
            convert "$img" -resize 900x900\> -quality 80 "$output"
            rm "$img"
          done

      - name: Auto-commit converted images
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Convert images to WebP"
          file_pattern: "events_listing/assets/images/*.webp images/inbox/*"
          push_options: --force # Add force push

  # purge-history:
  #   needs: convert
  #   runs-on: ubuntu-latest

  #   permissions:
  #     # Give the default GITHUB_TOKEN write permission to commit and push the
  #     # added or changed files to the repository.
  #     contents: write

  #   steps:
  #     - name: Checkout full history
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Install git-filter-repo
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y git-filter-repo
  #     - name: Purge image blobs from history
  #       run: |
  #         git filter-repo --invert-paths --force --partial \
  #           --path-glob 'images/inbox/[!.]*' \
  #           --path-glob 'images/**/*.{png,jpg,jpeg,gif,webp}'
  #     - name: Force push cleaned history
  #       run: |
  #         git push origin --force --all
  #         git push origin --force --tags
