name: Deploy Jekyll site to Pages

on:
  push:
    branches:
      - main
    paths:
      - 'events.csv'
      - '.github/workflows/jekyll_site.yml'
      - 'events_listing/**'
  workflow_dispatch:
  workflow_run:
    workflows: ["Regenerate events.ics"]
    branches: [main]
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  packages: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build Jekyll site
        run: docker compose run -e JEKYLL_ENV=production -e FORM_ADD_EVENT_POST_ENDPOINT=${{ secrets.FORM_ADD_EVENT_POST_ENDPOINT }} app jekyll build --source /app/events_listing --destination /app/_site --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          COMPOSE_FILE: docker-compose.ci.yml

      # Breaks some CSS styles
      - name: Minify HTML, CSS, and JS
        uses: docker://devatherock/minify-js:3.1.0
        with:
          directory: '_site'
          add_suffix: false
          exclusions: |-        # Optional
            _site/assets/css/styles.css

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
